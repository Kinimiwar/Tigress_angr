; ModuleID = '<string>'
source_filename = "<string>"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "unknown-unknown-unknown"

; Function Attrs: norecurse nounwind readnone
define i64 @SECRET(i64 %.1) local_unnamed_addr #0 {
.3:
  %.4 = add i64 %.1, -896446207
  %.5 = or i64 %.4, %.1
  %.7 = xor i64 %.5, %.4
  %.8 = shl i64 %.1, 1
  %0 = udiv i64 %.1, 3
  %.10.not = add i64 %.8, -896446207
  %.20 = and i64 %.10.not, %0
  %.21 = icmp ule i64 %.7, %.20
  %1 = lshr i64 %0, 48
  %2 = trunc i64 %1 to i32
  %3 = lshr i64 %0, 16
  %.54 = and i64 %0, 4294967295
  %.4521.masked = and i64 %3, 4294901760
  %.55 = or i64 %.4521.masked, %1
  %.56 = shl nuw i64 %.55, 32
  %.57 = or i64 %.56, %.54
  %4 = lshr i64 %.1, 3
  %.68 = and i64 %4, 6
  %.69 = or i64 %.68, 1
  %.70 = shl i64 %.57, %.69
  %.78 = icmp ule i64 %.70, %.4
  %.87 = trunc i64 %.1 to i4
  %.88 = add i4 %.87, 1
  %.89 = lshr i4 %.88, 1
  %.90 = trunc i4 %.89 to i3
  %.91 = lshr i64 %.1, 1
  %.92 = trunc i64 %.91 to i3
  %.93 = or i3 %.90, %.92
  %.99 = zext i3 %.93 to i6
  %.100 = shl nuw nsw i6 %.99, 1
  %.101 = or i6 %.100, 1
  %.102 = sub nsw i6 0, %.101
  %.103 = zext i6 %.102 to i64
  %.107 = lshr i64 %.4, %.103
  %.122 = zext i3 %.93 to i64
  %.123 = shl nuw nsw i64 %.122, 1
  %.124 = or i64 %.123, 1
  %.125 = shl i64 %.4, %.124
  %.126 = or i64 %.107, %.125
  %.158 = xor i64 %.57, %.10.not
  %.159 = icmp ugt i64 %.126, %.158
  %.167 = and i1 %.21, %.78
  %.168 = and i1 %.167, %.159
  br i1 %.168, label %.3.if, label %.3.endif

.3.if:                                            ; preds = %.3
  %5 = trunc i64 %.1 to i5
  %.178 = shl i5 %5, 1
  %6 = and i5 %.178, 14
  %7 = or i5 %6, 1
  %.185 = zext i5 %7 to i6
  %.186 = sub nsw i6 0, %.185
  %.187 = zext i6 %.186 to i64
  %.191 = lshr i64 %.5, %.187
  %.206 = and i64 %.8, 14
  %.207 = or i64 %.206, 1
  %.208 = shl i64 %.5, %.207
  %.209 = or i64 %.191, %.208
  %8 = and i5 %5, 14
  %9 = or i5 %8, 1
  %.221 = zext i5 %9 to i6
  %.222 = sub nsw i6 0, %.221
  %.223 = zext i6 %.222 to i64
  %.227 = shl i64 %.209, %.223
  %.278 = and i64 %.1, 14
  %.279 = or i64 %.278, 1
  %.280 = lshr i64 %.209, %.279
  %.281 = or i64 %.227, %.280
  %10 = or i4 %.88, 1
  %.335 = zext i4 %10 to i6
  %.336 = sub nsw i6 0, %.335
  %.337 = zext i6 %.336 to i64
  %.341 = lshr i64 %.209, %.337
  %.396 = zext i4 %10 to i64
  %.397 = shl i64 %.209, %.396
  %.342426 = or i64 %.341, %.397
  %11 = lshr i64 %.342426, 2
  %12 = trunc i64 %11 to i5
  %13 = and i5 %12, 14
  %14 = or i5 %13, 1
  %.408 = zext i5 %14 to i6
  %.409 = sub nsw i6 0, %.408
  %.410 = zext i6 %.409 to i64
  %.414 = shl i64 %.4, %.410
  %.540 = and i64 %11, 14
  %.541 = or i64 %.540, 1
  %.542 = lshr i64 %.4, %.541
  %.543 = or i64 %.414, %.542
  %.544 = mul i64 %.543, %.281
  ret i64 %.544

.3.endif:                                         ; preds = %.3
  %.701 = icmp ule i64 %.126, %.158
  %.710 = and i1 %.167, %.701
  br i1 %.710, label %.3.endif.if, label %.3.endif.endif

.3.endif.if:                                      ; preds = %.3.endif
  %.713 = trunc i64 %.1 to i5
  %.714 = shl i5 %.713, 1
  %15 = or i5 %.714, 1
  %.721 = zext i5 %15 to i64
  %.722 = shl nuw nsw i64 %.721, 4
  %.725 = or i64 %.722, %.4
  %.726 = add i64 %.1, 1
  %.727417 = or i64 %.726, %.1
  %16 = lshr i64 %.727417, 2
  %17 = trunc i64 %16 to i5
  %18 = and i5 %17, 14
  %19 = or i5 %18, 1
  %.739 = zext i5 %19 to i6
  %.740 = sub nsw i6 0, %.739
  %.741 = zext i6 %.740 to i64
  %.745 = shl i64 %.725, %.741
  %.772 = and i64 %16, 14
  %.773 = or i64 %.772, 1
  %.774 = lshr i64 %.725, %.773
  %.775 = or i64 %.745, %.774
  %20 = lshr i64 %0, 24
  %.790 = and i32 %2, 255
  %.792421 = shl nuw nsw i64 %20, 8
  %.792 = trunc i64 %.792421 to i32
  %.793 = or i32 %.790, %.792
  %.799 = or i4 %.88, %.87
  %.803 = mul i4 %.87, -2
  %.800 = add i4 %.803, -1
  %.804 = add i4 %.800, %.799
  %.810 = zext i4 %.804 to i8
  %.811 = shl nuw nsw i8 %.810, 3
  %.819 = trunc i64 %0 to i8
  %.820 = or i8 %.811, %.819
  %.821 = zext i8 %.820 to i40
  %.822 = zext i32 %.793 to i40
  %.823 = shl nuw i40 %.822, 8
  %.824 = or i40 %.823, %.821
  %21 = lshr i64 %0, 8
  %22 = trunc i64 %21 to i56
  %.832 = and i56 %22, 65535
  %.833 = zext i40 %.824 to i56
  %.834 = shl nuw i56 %.833, 16
  %.835 = or i56 %.834, %.832
  %23 = lshr i64 %0, 56
  %.844 = zext i56 %.835 to i64
  %.845 = shl nuw i64 %.844, 8
  %.846 = or i64 %.845, %23
  %24 = and i5 %.713, 14
  %25 = or i5 %24, 1
  %.858 = zext i5 %25 to i6
  %.859 = sub nsw i6 0, %.858
  %.860 = zext i6 %.859 to i64
  %.864 = shl i64 %.846, %.860
  %.946 = and i64 %.1, 14
  %.947 = or i64 %.946, 1
  %.948 = lshr i64 %.846, %.947
  %.949 = or i64 %.864, %.948
  %.950 = mul i64 %.949, %.775
  ret i64 %.950

.3.endif.endif:                                   ; preds = %.3.endif
  %.969 = icmp ugt i64 %.7, %.20
  %.1020 = trunc i64 %.1 to i6
  %.1021 = shl i6 %.1020, 2
  %26 = or i6 %.1021, 2
  %.1028 = zext i6 %26 to i64
  %.1029 = shl nuw nsw i64 %.1028, 4
  %.1033 = or i64 %.5, %.1029
  %.1036 = trunc i64 %.1 to i3
  %.1037 = add i3 %.1036, 1
  %.1040 = or i3 %.1037, %.1036
  %.1046 = zext i3 %.1040 to i64
  %.1047 = shl nuw nsw i64 %.1046, 2
  %.1050 = or i64 %.1047, %.4
  %.1052.demorgan = and i64 %.1033, %.1050
  %.1054 = icmp ule i64 %.70, %.1052.demorgan
  %.1098 = lshr i64 %.1050, %.103
  %.1131 = shl i64 %.1050, %.124
  %.1132 = or i64 %.1098, %.1131
  %.1165 = icmp ugt i64 %.1132, %.158
  %.1173 = and i1 %.969, %.1054
  %.1174 = and i1 %.1173, %.1165
  br i1 %.1174, label %.3.endif.endif.if, label %.3.endif.endif.endif

.3.endif.endif.if:                                ; preds = %.3.endif.endif
  %27 = trunc i4 %.89 to i3
  %28 = trunc i64 %.1 to i5
  %.1197 = shl i5 %28, 1
  %29 = and i5 %.1197, 14
  %30 = or i5 %29, 1
  %.1204 = zext i5 %30 to i6
  %.1205 = sub nsw i6 0, %.1204
  %.1206 = zext i6 %.1205 to i64
  %.1210 = lshr i64 %.1033, %.1206
  %.1238 = and i64 %.8, 14
  %.1239 = or i64 %.1238, 1
  %.1240 = shl i64 %.1033, %.1239
  %.1241 = or i64 %.1210, %.1240
  %31 = and i5 %28, 14
  %32 = or i5 %31, 1
  %.1253 = zext i5 %32 to i6
  %.1254 = sub nsw i6 0, %.1253
  %.1255 = zext i6 %.1254 to i64
  %.1259 = shl i64 %.1241, %.1255
  %.1336 = and i64 %.1, 14
  %.1337 = or i64 %.1336, 1
  %.1338 = lshr i64 %.1241, %.1337
  %.1339 = or i64 %.1259, %.1338
  %.1423 = trunc i64 %.1 to i2
  %.1424 = add i2 %.1423, 1
  %.1427 = or i2 %.1424, %.1423
  %.1429 = zext i2 %.1427 to i3
  %.1430 = shl nuw i3 %.1429, 1
  %.1437 = or i3 %.1430, %27
  %.1443 = zext i3 %.1437 to i6
  %.1444 = shl nuw nsw i6 %.1443, 1
  %.1445 = or i6 %.1444, 1
  %.1446 = sub nsw i6 0, %.1445
  %.1447 = zext i6 %.1446 to i64
  %.1451 = lshr i64 %.1241, %.1447
  %.1541 = zext i3 %.1437 to i64
  %.1542 = shl nuw nsw i64 %.1541, 1
  %.1543 = or i64 %.1542, 1
  %.1544 = shl i64 %.1241, %.1543
  %.1452412 = or i64 %.1451, %.1544
  %33 = lshr i64 %.1452412, 2
  %34 = trunc i64 %33 to i5
  %35 = and i5 %34, 14
  %36 = or i5 %35, 1
  %.1555 = zext i5 %36 to i6
  %.1556 = sub nsw i6 0, %.1555
  %.1557 = zext i6 %.1556 to i64
  %.1561 = shl i64 %.1050, %.1557
  %.1776 = and i64 %33, 14
  %.1777 = or i64 %.1776, 1
  %.1778 = lshr i64 %.1050, %.1777
  %.1779 = or i64 %.1561, %.1778
  %.1780 = mul i64 %.1779, %.1339
  ret i64 %.1780

.3.endif.endif.endif:                             ; preds = %.3.endif.endif
  %37 = icmp ule i64 %.7, %.20
  %.1856 = icmp ugt i64 %.70, %.4
  %.1875 = shl i64 %0, 4
  %.1876 = and i64 %.1875, 1008
  %.1879 = or i64 %.1876, %.4
  %.1901 = lshr i64 %.1879, %.103
  %.1935 = shl i64 %.1879, %.124
  %.1936 = or i64 %.1901, %.1935
  %.1969 = icmp ugt i64 %.1936, %.158
  %.1977 = and i1 %37, %.1856
  %.1978 = and i1 %.1977, %.1969
  br i1 %.1978, label %.3.endif.endif.endif.if, label %.3.endif.endif.endif.endif

.3.endif.endif.endif.if:                          ; preds = %.3.endif.endif.endif
  %const441 = bitcast i64 72057593141481729 to i64
  %const439 = bitcast i64 281474080264449 to i64
  %const437 = bitcast i64 1098615181569 to i64
  %const435 = bitcast i64 3398521089 to i64
  %.1985248 = lshr i64 %.5, 56
  %.1986 = add i64 %.1, %const439
  %.1987251 = or i64 %.1986, %.1
  %.1991250 = lshr i64 %.1987251, 40
  %38 = trunc i64 %.1991250 to i16
  %.1992 = and i16 %38, 255
  %.1994252 = shl nuw nsw i64 %.1985248, 8
  %.1994 = trunc i64 %.1994252 to i16
  %.1995 = or i16 %.1992, %.1994
  %.1996 = add i64 %.1, %const441
  %.1997254 = or i64 %.1996, %.1
  %.2001253 = lshr i64 %.1997254, 48
  %39 = trunc i64 %.2001253 to i24
  %.2002 = and i24 %39, 255
  %.2003 = zext i16 %.1995 to i24
  %.2004 = shl nuw i24 %.2003, 8
  %.2005 = or i24 %.2004, %.2002
  %.2006 = add i64 %.1, %const437
  %.2007256 = or i64 %.2006, %.1
  %.2011255 = lshr i64 %.2007256, 32
  %40 = trunc i64 %.2011255 to i32
  %.2012 = and i32 %40, 255
  %.2013 = zext i24 %.2005 to i32
  %.2014 = shl nuw i32 %.2013, 8
  %.2015 = or i32 %.2014, %.2012
  %.2016 = add i64 %.1, %const435
  %.2017258 = or i64 %.2016, %.1
  %.2021257 = lshr i64 %.2017258, 24
  %41 = trunc i64 %.2021257 to i40
  %.2022 = and i40 %41, 255
  %.2023 = zext i32 %.2015 to i40
  %.2024 = shl nuw i40 %.2023, 8
  %.2025 = or i40 %.2024, %.2022
  %.2026 = add i64 %.1, 9523457
  %.2027260 = or i64 %.2026, %.1
  %.2031259 = lshr i64 %.2027260, 16
  %42 = trunc i64 %.2031259 to i48
  %.2032 = and i48 %42, 255
  %.2033 = zext i40 %.2025 to i48
  %.2034 = shl nuw i48 %.2033, 8
  %.2035 = or i48 %.2034, %.2032
  %.2042 = trunc i64 %0 to i6
  %.2045 = shl i6 %.1020, 1
  %.2046 = or i6 %.2045, 1
  %.2047 = mul i6 %.2046, %.2042
  %.2048 = lshr i6 %.2047, 4
  %.2050 = zext i6 %.2048 to i8
  %.2054 = add i64 %.1, 20737
  %.2055434 = or i64 %.2054, %.1
  %.2057433 = lshr i64 %.2055434, 8
  %.2057 = trunc i64 %.2057433 to i8
  %.2060 = or i8 %.2057, %.2050
  %.2061 = zext i8 %.2060 to i56
  %.2062 = zext i48 %.2035 to i56
  %.2063 = shl nuw i56 %.2062, 8
  %.2064 = or i56 %.2063, %.2061
  %.2071 = trunc i64 %0 to i4
  %.2074 = shl i4 %.87, 1
  %.2075 = or i4 %.2074, 1
  %.2076 = mul i4 %.2075, %.2071
  %.2078 = zext i4 %.2076 to i8
  %.2079 = shl nuw i8 %.2078, 4
  %.2082 = trunc i64 %.1 to i8
  %.2083 = add i8 %.2082, 1
  %.2084 = or i8 %.2083, %.2082
  %.2087 = or i8 %.2084, %.2079
  %.2088 = zext i8 %.2087 to i64
  %.2089 = zext i56 %.2064 to i64
  %.2090 = shl nuw i64 %.2089, 8
  %.2091 = or i64 %.2090, %.2088
  %43 = trunc i64 %.1 to i5
  %.2098 = shl i5 %43, 1
  %44 = and i5 %.2098, 14
  %45 = or i5 %44, 1
  %.2105 = zext i5 %45 to i6
  %.2106 = sub nsw i6 0, %.2105
  %.2107 = zext i6 %.2106 to i64
  %.2111 = lshr i64 %.2091, %.2107
  %.2236 = and i64 %.8, 14
  %.2237 = or i64 %.2236, 1
  %.2238 = shl i64 %.2091, %.2237
  %.2239 = or i64 %.2111, %.2238
  %46 = and i5 %43, 14
  %47 = or i5 %46, 1
  %.2251 = zext i5 %47 to i6
  %.2252 = sub nsw i6 0, %.2251
  %.2253 = zext i6 %.2252 to i64
  %.2257 = shl i64 %.2239, %.2253
  %.2528 = and i64 %.1, 14
  %.2529 = or i64 %.2528, 1
  %.2530 = lshr i64 %.2239, %.2529
  %.2531 = or i64 %.2257, %.2530
  %48 = or i4 %.88, 1
  %.2821 = zext i4 %48 to i6
  %.2822 = sub nsw i6 0, %.2821
  %.2823 = zext i6 %.2822 to i64
  %.2827 = lshr i64 %.2239, %.2823
  %.3102 = zext i4 %48 to i64
  %.3103 = shl i64 %.2239, %.3102
  %.2828354 = or i64 %.2827, %.3103
  %49 = lshr i64 %.2828354, 2
  %50 = trunc i64 %49 to i5
  %51 = and i5 %50, 14
  %52 = or i5 %51, 1
  %.3114 = zext i5 %52 to i6
  %.3115 = sub nsw i6 0, %.3114
  %.3116 = zext i6 %.3115 to i64
  %.3120 = shl i64 %.1879, %.3116
  %.3702 = and i64 %49, 14
  %.3703 = or i64 %.3702, 1
  %.3704 = lshr i64 %.1879, %.3703
  %.3705 = or i64 %.3120, %.3704
  %.3706 = mul i64 %.3705, %.2531
  ret i64 %.3706

.3.endif.endif.endif.endif:                       ; preds = %.3.endif.endif.endif
  %.3921 = icmp ule i64 %.1132, %.158
  %.3930 = and i1 %.1173, %.3921
  br i1 %.3930, label %.3.endif.endif.endif.endif.if, label %.3.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.if:                    ; preds = %.3.endif.endif.endif.endif
  %.3933 = trunc i64 %.1 to i5
  %.3934 = shl i5 %.3933, 1
  %53 = or i5 %.3934, 1
  %.3941 = zext i5 %53 to i64
  %.3942 = shl nuw nsw i64 %.3941, 4
  %.3960 = or i64 %.1050, %.3942
  %.3961 = add i64 %.1, 1
  %.3962242 = or i64 %.3961, %.1
  %.3964241 = lshr i64 %.3962242, 3
  %.3964 = trunc i64 %.3964241 to i3
  %54 = or i3 %.3964, -4
  %.3973 = zext i3 %54 to i6
  %.3974 = shl nuw nsw i6 %.3973, 1
  %.3975 = or i6 %.3974, 1
  %.3976 = sub nsw i6 0, %.3975
  %.3977 = zext i6 %.3976 to i64
  %.3981 = shl i64 %.3960, %.3977
  %.4023 = zext i3 %54 to i64
  %.4024 = shl nuw nsw i64 %.4023, 1
  %.4025 = or i64 %.4024, 1
  %.4026 = lshr i64 %.3960, %.4025
  %.4027 = or i64 %.3981, %.4026
  %55 = lshr i64 %0, 24
  %.4042 = and i32 %2, 255
  %.4044245 = shl nuw nsw i64 %55, 8
  %.4044 = trunc i64 %.4044245 to i32
  %.4045 = or i32 %.4042, %.4044
  %.4051 = or i4 %.88, %.87
  %.4055 = mul i4 %.87, -2
  %.4052 = add i4 %.4055, -1
  %.4056 = add i4 %.4052, %.4051
  %.4062 = zext i4 %.4056 to i8
  %.4063 = shl nuw nsw i8 %.4062, 3
  %.4071 = trunc i64 %0 to i8
  %.4072 = or i8 %.4063, %.4071
  %.4073 = zext i8 %.4072 to i40
  %.4074 = zext i32 %.4045 to i40
  %.4075 = shl nuw i40 %.4074, 8
  %.4076 = or i40 %.4075, %.4073
  %56 = lshr i64 %0, 8
  %57 = trunc i64 %56 to i56
  %.4084 = and i56 %57, 65535
  %.4085 = zext i40 %.4076 to i56
  %.4086 = shl nuw i56 %.4085, 16
  %.4087 = or i56 %.4086, %.4084
  %58 = lshr i64 %0, 56
  %.4096 = zext i56 %.4087 to i64
  %.4097 = shl nuw i64 %.4096, 8
  %.4098 = or i64 %.4097, %58
  %59 = and i5 %.3933, 14
  %60 = or i5 %59, 1
  %.4110 = zext i5 %60 to i6
  %.4111 = sub nsw i6 0, %.4110
  %.4112 = zext i6 %.4111 to i64
  %.4116 = shl i64 %.4098, %.4112
  %.4198 = and i64 %.1, 14
  %.4199 = or i64 %.4198, 1
  %.4200 = lshr i64 %.4098, %.4199
  %.4201 = or i64 %.4116, %.4200
  %.4202 = mul i64 %.4201, %.4027
  ret i64 %.4202

.3.endif.endif.endif.endif.endif:                 ; preds = %.3.endif.endif.endif.endif
  %.4391 = icmp ule i64 %.1936, %.158
  %.4400 = and i1 %.1977, %.4391
  br i1 %.4400, label %.3.endif.endif.endif.endif.endif.if, label %.3.endif.endif.endif.endif.endif.endif

.3.endif.endif.endif.endif.endif.if:              ; preds = %.3.endif.endif.endif.endif.endif
  %61 = lshr i64 %0, 24
  %.4416 = and i32 %2, 255
  %.4418238 = shl nuw nsw i64 %61, 8
  %.4418 = trunc i64 %.4418238 to i32
  %.4419 = or i32 %.4416, %.4418
  %.4425 = or i4 %.88, %.87
  %.4429 = mul i4 %.87, -2
  %.4426 = add i4 %.4429, -1
  %.4430 = add i4 %.4426, %.4425
  %.4436 = zext i4 %.4430 to i8
  %.4437 = shl nuw nsw i8 %.4436, 3
  %.4445 = trunc i64 %0 to i8
  %.4446 = or i8 %.4437, %.4445
  %.4447 = zext i8 %.4446 to i40
  %.4448 = zext i32 %.4419 to i40
  %.4449 = shl nuw i40 %.4448, 8
  %.4450 = or i40 %.4449, %.4447
  %62 = lshr i64 %0, 8
  %63 = trunc i64 %62 to i56
  %.4458 = and i56 %63, 65535
  %.4459 = zext i40 %.4450 to i56
  %.4460 = shl nuw i56 %.4459, 16
  %.4461 = or i56 %.4460, %.4458
  %64 = lshr i64 %0, 56
  %.4470 = zext i56 %.4461 to i64
  %.4471 = shl nuw i64 %.4470, 8
  %.4472 = or i64 %.4471, %64
  %65 = trunc i64 %.1 to i5
  %66 = and i5 %65, 14
  %67 = or i5 %66, 1
  %.4484 = zext i5 %67 to i6
  %.4485 = sub nsw i6 0, %.4484
  %.4486 = zext i6 %.4485 to i64
  %.4490 = shl i64 %.4472, %.4486
  %.4572 = and i64 %.1, 14
  %.4573 = or i64 %.4572, 1
  %.4574 = lshr i64 %.4472, %.4573
  %.4575 = or i64 %.4490, %.4574
  %.4578 = shl i5 %65, 1
  %68 = or i5 %.4578, 1
  %.4585 = zext i5 %68 to i64
  %.4586 = shl nuw nsw i64 %.4585, 4
  %.4605 = or i64 %.1879, %.4586
  %.4612 = trunc i64 %0 to i2
  %.4614 = trunc i64 %.1 to i2
  %.4615 = shl i2 %.4614, 1
  %.4616 = or i2 %.4615, 1
  %.4617 = mul i2 %.4616, %.4612
  %.4619 = zext i2 %.4617 to i3
  %.4620 = shl nuw i3 %.4619, 1
  %.4623 = trunc i64 %.1 to i8
  %.4624 = add i8 %.4623, 1
  %.4625 = lshr i8 %.4624, 3
  %.4626 = trunc i8 %.4625 to i3
  %.4629 = trunc i64 %4 to i3
  %.4627 = or i3 %.4626, %.4629
  %.4630 = or i3 %.4627, %.4620
  %.4636 = zext i3 %.4630 to i6
  %.4637 = shl nuw nsw i6 %.4636, 1
  %.4638 = or i6 %.4637, 1
  %.4639 = sub nsw i6 0, %.4638
  %.4640 = zext i6 %.4639 to i64
  %.4644 = shl i64 %.4605, %.4640
  %.4705 = zext i3 %.4630 to i64
  %.4706 = shl nuw nsw i64 %.4705, 1
  %.4707 = or i64 %.4706, 1
  %.4708 = lshr i64 %.4605, %.4707
  %.4709 = or i64 %.4644, %.4708
  %.4710 = mul i64 %.4575, %.4709
  ret i64 %.4710

.3.endif.endif.endif.endif.endif.endif:           ; preds = %.3.endif.endif.endif.endif.endif
  %69 = icmp ugt i64 %.7, %.20
  %.4814 = icmp ugt i64 %.70, %.1052.demorgan
  %.4852 = or i64 %.1879, %.1047
  %.4874 = lshr i64 %.4852, %.103
  %.4923 = shl i64 %.4852, %.124
  %.4924 = or i64 %.4874, %.4923
  %.4957 = icmp ugt i64 %.4924, %.158
  %.4965 = and i1 %69, %.4814
  %.4966 = and i1 %.4965, %.4957
  br i1 %.4966, label %.3.endif.endif.endif.endif.endif.endif.if, label %.3.endif.endif.endif.endif.endif.endif.endif.if

.3.endif.endif.endif.endif.endif.endif.if:        ; preds = %.3.endif.endif.endif.endif.endif.endif
  %70 = trunc i4 %.89 to i3
  %const440 = bitcast i64 72057593141481729 to i64
  %const438 = bitcast i64 281474080264449 to i64
  %const436 = bitcast i64 1098615181569 to i64
  %const = bitcast i64 3398521089 to i64
  %.497340 = lshr i64 %.5, 56
  %.4974 = add i64 %.1, %const438
  %.497543 = or i64 %.4974, %.1
  %.497942 = lshr i64 %.497543, 40
  %71 = trunc i64 %.497942 to i16
  %.4980 = and i16 %71, 255
  %.498244 = shl nuw nsw i64 %.497340, 8
  %.4982 = trunc i64 %.498244 to i16
  %.4983 = or i16 %.4980, %.4982
  %.4984 = add i64 %.1, %const440
  %.498546 = or i64 %.4984, %.1
  %.498945 = lshr i64 %.498546, 48
  %72 = trunc i64 %.498945 to i24
  %.4990 = and i24 %72, 255
  %.4991 = zext i16 %.4983 to i24
  %.4992 = shl nuw i24 %.4991, 8
  %.4993 = or i24 %.4992, %.4990
  %.4994 = add i64 %.1, %const436
  %.499548 = or i64 %.4994, %.1
  %.499947 = lshr i64 %.499548, 32
  %73 = trunc i64 %.499947 to i32
  %.5000 = and i32 %73, 255
  %.5001 = zext i24 %.4993 to i32
  %.5002 = shl nuw i32 %.5001, 8
  %.5003 = or i32 %.5002, %.5000
  %.5004 = add i64 %.1, %const
  %.500550 = or i64 %.5004, %.1
  %.500949 = lshr i64 %.500550, 24
  %74 = trunc i64 %.500949 to i40
  %.5010 = and i40 %74, 255
  %.5011 = zext i32 %.5003 to i40
  %.5012 = shl nuw i40 %.5011, 8
  %.5013 = or i40 %.5012, %.5010
  %.5014 = add i64 %.1, 9523457
  %.501552 = or i64 %.5014, %.1
  %.501951 = lshr i64 %.501552, 16
  %75 = trunc i64 %.501951 to i48
  %.5020 = and i48 %75, 255
  %.5021 = zext i40 %.5013 to i48
  %.5022 = shl nuw i48 %.5021, 8
  %.5023 = or i48 %.5022, %.5020
  %.5030 = trunc i64 %0 to i6
  %.5033 = shl i6 %.1020, 1
  %.5034 = or i6 %.5033, 1
  %.5035 = mul i6 %.5034, %.5030
  %.5036 = lshr i6 %.5035, 4
  %76 = lshr i6 %.1020, 2
  %.5047.mask = and i6 %76, 3
  %.505253 = or i6 %.5036, %.5047.mask
  %.5052 = zext i6 %.505253 to i8
  %.5053 = add i64 %.1, 20737
  %.5054432 = or i64 %.5053, %.1
  %.5056431 = lshr i64 %.5054432, 8
  %.5056 = trunc i64 %.5056431 to i8
  %.5059 = or i8 %.5056, %.5052
  %.5060 = zext i8 %.5059 to i56
  %.5061 = zext i48 %.5023 to i56
  %.5062 = shl nuw i56 %.5061, 8
  %.5063 = or i56 %.5062, %.5060
  %.5070 = trunc i64 %0 to i4
  %.5073 = shl i4 %.87, 1
  %.5074 = or i4 %.5073, 1
  %.5075 = mul i4 %.5074, %.5070
  %.5082 = shl i4 %.87, 2
  %.5083 = or i4 %.5082, %.5075
  %.50785455 = or i4 %.5083, 2
  %.507854 = zext i4 %.50785455 to i8
  %.5088 = shl nuw i8 %.507854, 4
  %.5090 = trunc i64 %.1 to i8
  %.5091 = add i8 %.5090, 1
  %.5092 = or i8 %.5091, %.5090
  %.5095 = or i8 %.5092, %.5088
  %.5096 = zext i8 %.5095 to i64
  %.5097 = zext i56 %.5063 to i64
  %.5098 = shl nuw i64 %.5097, 8
  %.5099 = or i64 %.5098, %.5096
  %77 = trunc i64 %.1 to i5
  %.5106 = shl i5 %77, 1
  %78 = and i5 %.5106, 14
  %79 = or i5 %78, 1
  %.5113 = zext i5 %79 to i6
  %.5114 = sub nsw i6 0, %.5113
  %.5115 = zext i6 %.5114 to i64
  %.5119 = lshr i64 %.5099, %.5115
  %.5264 = and i64 %.8, 14
  %.5265 = or i64 %.5264, 1
  %.5266 = shl i64 %.5099, %.5265
  %.5267 = or i64 %.5119, %.5266
  %80 = and i5 %77, 14
  %81 = or i5 %80, 1
  %.5279 = zext i5 %81 to i6
  %.5280 = sub nsw i6 0, %.5279
  %.5281 = zext i6 %.5280 to i64
  %.5285 = shl i64 %.5267, %.5281
  %.5596 = and i64 %.1, 14
  %.5597 = or i64 %.5596, 1
  %.5598 = lshr i64 %.5267, %.5597
  %.5599 = or i64 %.5285, %.5598
  %.5933 = trunc i64 %.1 to i2
  %.5934 = add i2 %.5933, 1
  %.5937 = or i2 %.5934, %.5933
  %.5939 = zext i2 %.5937 to i3
  %.5940 = shl nuw i3 %.5939, 1
  %.5947 = or i3 %.5940, %70
  %.5953 = zext i3 %.5947 to i6
  %.5954 = shl nuw nsw i6 %.5953, 1
  %.5955 = or i6 %.5954, 1
  %.5956 = sub nsw i6 0, %.5955
  %.5957 = zext i6 %.5956 to i64
  %.5961 = lshr i64 %.5267, %.5957
  %.6285 = zext i3 %.5947 to i64
  %.6286 = shl nuw nsw i64 %.6285, 1
  %.6287 = or i64 %.6286, 1
  %.6288 = shl i64 %.5267, %.6287
  %.5962170 = or i64 %.5961, %.6288
  %82 = lshr i64 %.5962170, 2
  %83 = trunc i64 %82 to i5
  %84 = and i5 %83, 14
  %85 = or i5 %84, 1
  %.6299 = zext i5 %85 to i6
  %.6300 = sub nsw i6 0, %.6299
  %.6301 = zext i6 %.6300 to i64
  %.6305 = shl i64 %.4852, %.6301
  %.7004 = and i64 %82, 14
  %.7005 = or i64 %.7004, 1
  %.7006 = lshr i64 %.4852, %.7005
  %.7007 = or i64 %.6305, %.7006
  %.7008 = mul i64 %.7007, %.5599
  ret i64 %.7008

.3.endif.endif.endif.endif.endif.endif.endif.if:  ; preds = %.3.endif.endif.endif.endif.endif.endif
  %86 = lshr i64 %0, 24
  %.7280 = and i32 %2, 255
  %.728237 = shl nuw nsw i64 %86, 8
  %.7282 = trunc i64 %.728237 to i32
  %.7283 = or i32 %.7280, %.7282
  %.7289 = or i4 %.88, %.87
  %.7293 = mul i4 %.87, -2
  %.7290 = add i4 %.7293, -1
  %.7294 = add i4 %.7290, %.7289
  %.7300 = zext i4 %.7294 to i8
  %.7301 = shl nuw nsw i8 %.7300, 3
  %.7309 = trunc i64 %0 to i8
  %.7310 = or i8 %.7301, %.7309
  %.7311 = zext i8 %.7310 to i40
  %.7312 = zext i32 %.7283 to i40
  %.7313 = shl nuw i40 %.7312, 8
  %.7314 = or i40 %.7313, %.7311
  %87 = lshr i64 %0, 8
  %88 = trunc i64 %87 to i56
  %.7322 = and i56 %88, 65535
  %.7323 = zext i40 %.7314 to i56
  %.7324 = shl nuw i56 %.7323, 16
  %.7325 = or i56 %.7324, %.7322
  %89 = lshr i64 %0, 56
  %.7334 = zext i56 %.7325 to i64
  %.7335 = shl nuw i64 %.7334, 8
  %.7336 = or i64 %.7335, %89
  %90 = trunc i64 %.1 to i5
  %91 = and i5 %90, 14
  %92 = or i5 %91, 1
  %.7348 = zext i5 %92 to i6
  %.7349 = sub nsw i6 0, %.7348
  %.7350 = zext i6 %.7349 to i64
  %.7354 = shl i64 %.7336, %.7350
  %.7436 = and i64 %.1, 14
  %.7437 = or i64 %.7436, 1
  %.7438 = lshr i64 %.7336, %.7437
  %.7439 = or i64 %.7354, %.7438
  %.7442 = shl i5 %90, 1
  %93 = or i5 %.7442, 1
  %.7449 = zext i5 %93 to i64
  %.7450 = shl nuw nsw i64 %.7449, 4
  %.7482 = or i64 %.1879, %.7450
  %.7484 = or i64 %.7482, %.1047
  %94 = trunc i64 %0 to i3
  %.7499 = shl i3 %94, 1
  %.7503 = trunc i64 %.1 to i8
  %.7504 = add i8 %.7503, 1
  %.7505 = lshr i8 %.7504, 3
  %.7506 = trunc i8 %.7505 to i3
  %.7509 = trunc i64 %4 to i3
  %.7501 = or i3 %.7509, %.7506
  %.7507 = or i3 %.7501, %.7499
  %95 = or i3 %.7507, -4
  %.7516 = zext i3 %95 to i6
  %.7517 = shl nuw nsw i6 %.7516, 1
  %.7518 = or i6 %.7517, 1
  %.7519 = sub nsw i6 0, %.7518
  %.7520 = zext i6 %.7519 to i64
  %.7524 = shl i64 %.7484, %.7520
  %.7601 = zext i3 %95 to i64
  %.7602 = shl nuw nsw i64 %.7601, 1
  %.7603 = or i64 %.7602, 1
  %.7604 = lshr i64 %.7484, %.7603
  %.7605 = or i64 %.7524, %.7604
  %.7606 = mul i64 %.7439, %.7605
  ret i64 %.7606
}

attributes #0 = { norecurse nounwind readnone }
