; ModuleID = '<string>'
source_filename = "<string>"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "unknown-unknown-unknown"

; Function Attrs: norecurse nounwind readnone
define i64 @SECRET(i64 %.1) local_unnamed_addr #0 {
.3:
  %0 = lshr i64 %.1, 25
  %1 = trunc i64 %0 to i39
  %2 = and i39 %1, 1
  %3 = trunc i64 %0 to i35
  %4 = and i35 %3, 16
  %.18 = zext i35 %4 to i39
  %.19 = or i39 %2, %.18
  %5 = shl nuw nsw i39 %.19, 4
  %6 = lshr i64 %.1, 21
  %7 = trunc i64 %6 to i43
  %8 = and i43 %7, 1
  %.28 = zext i39 %5 to i43
  %.29 = or i43 %8, %.28
  %9 = shl nuw nsw i43 %.29, 3
  %.34 = lshr i64 %.1, 18
  %10 = trunc i64 %.34 to i46
  %.36 = and i46 %10, 3
  %.38 = zext i43 %9 to i46
  %.39 = or i46 %.36, %.38
  %11 = shl nuw i46 %.39, 4
  %12 = lshr i64 %.1, 13
  %13 = trunc i64 %12 to i51
  %14 = and i51 %13, 1
  %.47 = zext i46 %11 to i51
  %.48 = shl nuw nsw i51 %.47, 1
  %.49 = or i51 %.48, %14
  %15 = shl nuw nsw i51 %.49, 2
  %16 = lshr i64 %.1, 11
  %17 = trunc i64 %16 to i53
  %18 = and i53 %17, 1
  %.58 = zext i51 %15 to i53
  %.59 = or i53 %18, %.58
  %19 = shl nuw nsw i53 %.59, 2
  %20 = lshr i64 %.1, 9
  %21 = trunc i64 %20 to i55
  %22 = and i55 %21, 1
  %.68 = zext i53 %19 to i55
  %.69 = or i55 %22, %.68
  %23 = shl nuw nsw i55 %.69, 1
  %.74 = lshr i64 %.1, 2
  %24 = trunc i64 %.74 to i62
  %.76 = and i62 %24, 63
  %.77 = zext i55 %23 to i62
  %.78 = shl nuw nsw i62 %.77, 6
  %.79 = or i62 %.78, %.76
  %25 = shl nuw i62 %.79, 2
  %.82 = zext i62 %25 to i64
  %.84 = mul i64 %.82, 502412191
  %.85 = add i64 %.84, %.1
  %.86 = add i64 %.85, -171483177724227824
  %.167 = add nsw i64 %.82, -341319700
  %.168 = xor i64 %.86, %.167
  %26 = lshr i64 %.1, 26
  %27 = trunc i64 %26 to i38
  %28 = and i38 %27, 1
  %29 = trunc i64 %26 to i36
  %30 = and i36 %29, 4
  %.183 = zext i36 %30 to i38
  %.184 = or i38 %28, %.183
  %31 = shl nuw nsw i38 %.184, 8
  %32 = and i46 %10, 1
  %.193 = zext i38 %31 to i46
  %.194 = or i46 %32, %.193
  %33 = shl nuw nsw i46 %.194, 2
  %34 = lshr i64 %.1, 16
  %35 = trunc i64 %34 to i48
  %36 = and i48 %35, 1
  %.203 = zext i46 %33 to i48
  %.204 = or i48 %36, %.203
  %37 = shl nuw nsw i48 %.204, 5
  %.211 = and i53 %17, 7
  %.213 = zext i48 %37 to i53
  %.214 = or i53 %.211, %.213
  %38 = shl nuw i53 %.214, 6
  %.219 = lshr i64 %.1, 5
  %39 = trunc i64 %.219 to i59
  %.221 = and i59 %39, 7
  %.223 = zext i53 %38 to i59
  %.224 = or i59 %.221, %.223
  %40 = shl nuw nsw i59 %.224, 3
  %41 = and i62 %24, 1
  %.233 = zext i59 %40 to i62
  %.234 = or i62 %41, %.233
  %42 = shl nuw nsw i62 %.234, 2
  %.237 = zext i62 %42 to i64
  %.239 = add nsw i64 %.237, -1595821287
  %43 = lshr i64 %.1, 3
  %44 = trunc i64 %43 to i59
  %45 = and i59 %44, 4
  %46 = or i59 %45, 3
  %.403 = zext i59 %46 to i64
  %.404 = lshr i64 %.86, %.403
  %.405 = add i64 %.404, %.1
  %.406 = mul i64 %.405, %.239
  %.407 = icmp eq i64 %.168, %.406
  %47 = trunc i64 %.1 to i3
  %.419 = and i3 %47, -4
  %.424 = add i3 %.419, %47
  %.430 = zext i3 %.424 to i64
  %.431 = shl nuw nsw i64 %.430, 2
  br i1 %.407, label %.3.if, label %.3.endif.if

.3.if:                                            ; preds = %.3
  %.514 = or i64 %.167, %.431
  %.597 = add i64 %.85, 16
  %48 = lshr i64 %.597, 1
  %49 = trunc i64 %48 to i5
  %50 = and i5 %49, 14
  %51 = or i5 %50, 1
  %.607 = zext i5 %51 to i6
  %.608 = sub nsw i6 0, %.607
  %.609 = zext i6 %.608 to i64
  %.613 = shl i64 %.514, %.609
  %.805 = and i64 %48, 14
  %.806 = or i64 %.805, 1
  %.807 = lshr i64 %.514, %.806
  %.808 = or i64 %.613, %.807
  %52 = or i62 %42, 16
  %.1047 = zext i62 %52 to i64
  %.97547 = xor i64 %.405, %.1047
  %53 = lshr i64 %.97547, 3
  %54 = trunc i64 %53 to i5
  %55 = and i5 %54, 14
  %56 = or i5 %55, 1
  %.1058 = zext i5 %56 to i6
  %.1059 = sub nsw i6 0, %.1058
  %.1060 = zext i6 %.1059 to i64
  %.1064 = lshr i64 %.808, %.1060
  %.1707 = and i64 %53, 14
  %.1708 = or i64 %.1707, 1
  %.1709 = shl i64 %.808, %.1708
  %.1710 = or i64 %.1064, %.1709
  ret i64 %.1710

.3.endif.if:                                      ; preds = %.3
  %57 = shl nuw nsw i64 %12, 2
  %58 = trunc i64 %57 to i16
  %59 = and i16 %58, 4
  %60 = trunc i64 %16 to i16
  %61 = and i16 %60, 1
  %.2196 = or i16 %59, %61
  %62 = shl nuw nsw i16 %.2196, 2
  %63 = trunc i64 %20 to i16
  %64 = and i16 %63, 1
  %.2206 = or i16 %62, %64
  %65 = trunc i64 %.74 to i16
  %.2213 = and i16 %65, 63
  %.2215 = shl nuw nsw i16 %.2206, 7
  %.2216 = or i16 %.2215, %.2213
  %66 = shl nuw nsw i16 %.2216, 2
  %.2221 = add i16 %66, -8212
  %67 = trunc i64 %.1 to i8
  %.22283 = add i8 %67, -20
  %.2230 = and i8 %.22283, -4
  %.2231 = zext i8 %.2230 to i16
  %.2233 = and i16 %.2221, -256
  %.2234 = or i16 %.2233, %.2231
  %.2315 = add nuw nsw i64 %.82, 3953647596
  %.2316 = lshr i64 %.2315, 16
  %68 = trunc i64 %.2316 to i32
  %.2318 = and i32 %68, 65535
  %.2319 = zext i16 %.2234 to i32
  %.2320 = shl nuw i32 %.2319, 16
  %.2321 = or i32 %.2318, %.2320
  %.2402 = add nuw nsw i64 %.82, 281474635390956
  %.2403 = lshr i64 %.2402, 32
  %69 = trunc i64 %.2403 to i48
  %.2405 = and i48 %69, 65535
  %.2406 = zext i32 %.2321 to i48
  %.2407 = shl nuw i48 %.2406, 16
  %.2408 = or i48 %.2407, %.2405
  %.2490 = lshr i64 %.167, 48
  %.2493 = zext i48 %.2408 to i64
  %.2494 = shl nuw i64 %.2493, 16
  %.2495 = or i64 %.2490, %.431
  %.2496 = or i64 %.2495, %.2494
  %.2579 = add i64 %.85, 16
  %70 = lshr i64 %.2579, 1
  %71 = trunc i64 %70 to i5
  %72 = and i5 %71, 14
  %73 = or i5 %72, 1
  %.2589 = zext i5 %73 to i6
  %.2590 = sub nsw i6 0, %.2589
  %.2591 = zext i6 %.2590 to i64
  %.2595 = shl i64 %.2496, %.2591
  %.3061 = and i64 %70, 14
  %.3062 = or i64 %.3061, 1
  %.3063 = lshr i64 %.2496, %.3062
  %.3064 = or i64 %.2595, %.3063
  %74 = trunc i64 %.1 to i4
  %.314011 = add i4 %74, -4
  %.3142 = lshr i4 %.314011, 1
  %75 = trunc i4 %.3142 to i3
  %.3144 = and i3 %75, -2
  %.3150 = zext i3 %.3144 to i6
  %.3151 = shl nuw nsw i6 %.3150, 1
  %.3152 = or i6 %.3151, 1
  %.3153 = sub nsw i6 0, %.3152
  %.3154 = zext i6 %.3153 to i64
  %.3158 = lshr i64 %.239, %.3154
  %.3246 = zext i3 %.3144 to i64
  %.3247 = shl nuw nsw i64 %.3246, 1
  %.3248 = or i64 %.3247, 1
  %.3249 = shl i64 %.239, %.3248
  %.315915 = or i64 %.3158, %.3249
  %.325214 = lshr i64 %.315915, 2
  %76 = trunc i64 %.325214 to i3
  %.3253 = and i3 %76, 3
  %.3423 = lshr i64 %.405, 20
  %.3424 = trunc i64 %.3423 to i3
  %.3425 = or i3 %.3253, %.3424
  %.361320 = lshr i64 %.315915, 4
  %.3613 = trunc i64 %.361320 to i3
  %.3614 = xor i3 %.3425, %.3613
  %.3620 = zext i3 %.3614 to i6
  %.3621 = shl nuw nsw i6 %.3620, 1
  %.3622 = or i6 %.3621, 1
  %.3623 = sub nsw i6 0, %.3622
  %.3624 = zext i6 %.3623 to i64
  %.3628 = lshr i64 %.3064, %.3624
  %.5126 = zext i3 %.3614 to i64
  %.5127 = shl nuw nsw i64 %.5126, 1
  %.5128 = or i64 %.5127, 1
  %.5129 = shl i64 %.3064, %.5128
  %.5130 = or i64 %.3628, %.5129
  ret i64 %.5130
}

attributes #0 = { norecurse nounwind readnone }
